Description: Fix FTBFS: Replace 'GTK_WIDGET_STATE'.
 Cf. README
Author: Scott Howard
Reviewed-by: Luca Falavigna <dktrkranz@debian.org>
Reviewed-by: gregor herrmann <gregoa@debian.org>
Reviewed-by: Andreas B. Mundt <andi@debian.org>
Last-Update: 2017-08-18

--- a/src/gui/calc/calc.c
+++ b/src/gui/calc/calc.c
@@ -310,7 +310,7 @@
                                                 gpointer         user_data)
 {
 	gdk_draw_pixmap(widget->window,
-	                widget->style->fg_gc[GTK_WIDGET_STATE (widget)],
+	                widget->style->fg_gc[gtk_widget_get_state (widget)],
 	                pixmap,
 	                event->area.x, event->area.y,
 	                event->area.x, event->area.y,
--- a/src/gui/calc/screen.c
+++ b/src/gui/calc/screen.c
@@ -189,7 +189,7 @@
 	skin_infos.image = gdk_pixbuf_scale_simple(skin_infos.raw, wr.wr.w, wr.wr.h, GDK_INTERP_NEAREST);
 
 	// and draw image into pixmap (next, into window on expose event)
-    gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[GTK_WIDGET_STATE(main_wnd)],
+    gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[gtk_widget_get_state(main_wnd)],
 		  skin_infos.image, 0, 0, 0, 0, -1, -1, GDK_RGB_DITHER_NONE, 0, 0);
 	gdk_window_invalidate_rect(main_wnd->window, &wr.gr, FALSE);
 }
@@ -206,7 +206,7 @@
 		gdk_pixbuf_scale_simple(skin_infos.raw, sr.w, sr.h, GDK_INTERP_NEAREST);
 
 	// and draw
-	gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[GTK_WIDGET_STATE(main_wnd)],
+	gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[gtk_widget_get_state(main_wnd)],
 		  skin_infos.image, ls.x, ls.y, lr.x, lr.y, lr.w, lr.h, GDK_RGB_DITHER_NONE, 0, 0);
 	gtk_widget_queue_draw_area(area, lr.x, lr.y, lr.w, lr.h);
 }
@@ -326,7 +326,7 @@
 			skin_infos.image = gdk_pixbuf_scale_simple(lcd, lr.w, lr.h, GDK_INTERP_NEAREST);
 
 			// and draw image into pixmap (next, into window on expose event)
-			gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[GTK_WIDGET_STATE(main_wnd)],
+			gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[gtk_widget_get_state(main_wnd)],
 			 skin_infos.image, src.x, src.y, lr.x, lr.y, src.w, src.h,
 			  GDK_RGB_DITHER_NONE, 0, 0);
 			gtk_widget_queue_draw_area(area, lr.x, lr.y, src.w, src.h);
@@ -334,7 +334,7 @@
 		else
 		{
 			// and draw image into pixmap (next, into window on expose event)
-			gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[GTK_WIDGET_STATE(main_wnd)],
+			gdk_draw_pixbuf(pixmap, main_wnd->style->fg_gc[gtk_widget_get_state(main_wnd)],
 			  lcd_mem, src.x, src.y, lr.x, lr.y, src.w, src.h,
 			  GDK_RGB_DITHER_NONE, 0, 0);
 			gtk_widget_queue_draw_area(area, lr.x, lr.y, src.w, src.h);
--- a/src/gui/debugger/dbg_all.c
+++ b/src/gui/debugger/dbg_all.c
@@ -97,21 +97,21 @@
 {	
 	WND_TMR_START();
 
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.regs))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.regs))
 		dbgregs_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.mem))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.mem))
 		dbgmem_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.bkpts))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.bkpts))
 		dbgbkpts_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.pclog))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.pclog))
 		dbgpclog_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.code))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.code))
 		dbgcode_refresh_window();
-    if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.stack))
+    if(options3.dbg_dock || gtk_widget_get_visible(dbgw.stack))
 		dbgstack_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.heap))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.heap))
 		dbgheap_refresh_window();
-	if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(options3.dbg_dock || gtk_widget_get_visible(dbgw.iop))
 		dbgiop_refresh_window();
 
 	WND_TMR_STOP("Debugger Refresh Time");
@@ -170,7 +170,7 @@
 	gtk_debugger_refresh();
 
 	// enable the debugger if GDB disabled it
-	if (!options3.dbg_dock && !GTK_WIDGET_SENSITIVE(dbgw.regs))
+	if (!options3.dbg_dock && !gtk_widget_get_sensitive(dbgw.regs))
 		gtk_debugger_enable();
 
 	// handle automatic debugging requests
@@ -187,7 +187,7 @@
 
 			ti68k_bkpt_get_pgmentry_offset(id, &handle, &offset);
 			ti68k_bkpt_del_pgmentry(handle);
-			if(options3.dbg_dock || GTK_WIDGET_VISIBLE(dbgw.bkpts))
+			if(options3.dbg_dock || gtk_widget_get_visible(dbgw.bkpts))
 				dbgbkpts_refresh_window();
 
 			delete_command(NULL, 0);
--- a/src/gui/debugger/dbg_bkpts.c
+++ b/src/gui/debugger/dbg_bkpts.c
@@ -393,7 +393,7 @@
 		gtk_window_iconify(GTK_WINDOW(wnd));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.bkpts) && !options3.bkpts.closed)
+	if(!gtk_widget_get_visible(dbgw.bkpts) && !options3.bkpts.closed)
 		gtk_widget_show(wnd);
 
 	return wnd;
--- a/src/gui/debugger/dbg_code.c
+++ b/src/gui/debugger/dbg_code.c
@@ -1123,7 +1123,7 @@
 
 int dbgcode_quit_enabled(void)
 {
-	return GTK_WIDGET_SENSITIVE(mi.m8);
+	return gtk_widget_get_sensitive(mi.m8);
 }
 
 static int close_debugger_wrapper(gpointer data)
--- a/src/gui/debugger/dbg_dock.c
+++ b/src/gui/debugger/dbg_dock.c
@@ -156,22 +156,22 @@
 
 void dbgdock_show_all(int all)
 {
-	if(!GTK_WIDGET_VISIBLE(dbgw.dock) && all)
+	if(!gtk_widget_get_visible(dbgw.dock) && all)
         gtk_widget_show(dbgw.dock);
 
-	if(GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(gtk_widget_get_visible(dbgw.iop))
         gtk_window_iconify(GTK_WINDOW(dbgw.iop));
-	if(GTK_WIDGET_VISIBLE(dbgw.pclog))
+	if(gtk_widget_get_visible(dbgw.pclog))
         gtk_window_iconify(GTK_WINDOW(dbgw.pclog));
 }
 
 void dbgdock_hide_all(int all)
 {
-	if(GTK_WIDGET_VISIBLE(dbgw.dock) && all)
+	if(gtk_widget_get_visible(dbgw.dock) && all)
         gtk_widget_hide(dbgw.dock);
 
-    if(GTK_WIDGET_VISIBLE(dbgw.pclog))
+    if(gtk_widget_get_visible(dbgw.pclog))
         gtk_widget_hide(dbgw.pclog);
-	if(GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(gtk_widget_get_visible(dbgw.iop))
         gtk_widget_hide(dbgw.iop);
 }
--- a/src/gui/debugger/dbg_heap.c
+++ b/src/gui/debugger/dbg_heap.c
@@ -176,7 +176,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.heap));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.heap) && !options3.heap.closed)
+	if(!gtk_widget_get_visible(dbgw.heap) && !options3.heap.closed)
 		gtk_widget_show(dbgw.heap);
 
 	return dbgw.heap;
--- a/src/gui/debugger/dbg_iop.c
+++ b/src/gui/debugger/dbg_iop.c
@@ -460,7 +460,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.iop));
 #endif
     
-	if(!GTK_WIDGET_VISIBLE(dbgw.iop) && !options3.iop.closed)
+	if(!gtk_widget_get_visible(dbgw.iop) && !options3.iop.closed)
 		gtk_widget_show(dbgw.iop);
 
 	return dbgw.iop;
--- a/src/gui/debugger/dbg_mem.c
+++ b/src/gui/debugger/dbg_mem.c
@@ -446,7 +446,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.mem));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.mem) && !options3.mem.closed)
+	if(!gtk_widget_get_visible(dbgw.mem) && !options3.mem.closed)
 		gtk_widget_show(dbgw.mem);
 
     return dbgw.mem;
--- a/src/gui/debugger/dbg_pclog.c
+++ b/src/gui/debugger/dbg_pclog.c
@@ -168,7 +168,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.pclog));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.pclog) && !options3.pclog.closed)
+	if(!gtk_widget_get_visible(dbgw.pclog) && !options3.pclog.closed)
 		gtk_widget_show(dbgw.pclog);
 
 	return dbgw.pclog;
--- a/src/gui/debugger/dbg_regs.c
+++ b/src/gui/debugger/dbg_regs.c
@@ -307,7 +307,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.regs));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.regs) && !options3.regs.closed)
+	if(!gtk_widget_get_visible(dbgw.regs) && !options3.regs.closed)
 		gtk_widget_show(dbgw.regs);
 
 	return dbgw.regs;
--- a/src/gui/debugger/dbg_stack.c
+++ b/src/gui/debugger/dbg_stack.c
@@ -203,7 +203,7 @@
 		gtk_window_iconify(GTK_WINDOW(dbgw.stack));
 #endif
 
-	if(!GTK_WIDGET_VISIBLE(dbgw.stack) && !options3.stack.closed)
+	if(!gtk_widget_get_visible(dbgw.stack) && !options3.stack.closed)
 		gtk_widget_show(dbgw.stack);
 
 	return dbgw.stack;
--- a/src/gui/debugger/dbg_wnds.c
+++ b/src/gui/debugger/dbg_wnds.c
@@ -79,21 +79,21 @@
 	if(options3.dbg_dock)
 		return;
 
-    if(GTK_WIDGET_VISIBLE(dbgw.regs))
+    if(gtk_widget_get_visible(dbgw.regs))
         gtk_window_iconify(GTK_WINDOW(dbgw.regs));
-    if(GTK_WIDGET_VISIBLE(dbgw.bkpts))
+    if(gtk_widget_get_visible(dbgw.bkpts))
         gtk_window_iconify(GTK_WINDOW(dbgw.bkpts));
-    if(GTK_WIDGET_VISIBLE(dbgw.mem))
+    if(gtk_widget_get_visible(dbgw.mem))
         gtk_window_iconify(GTK_WINDOW(dbgw.mem));
-    if(GTK_WIDGET_VISIBLE(dbgw.pclog))
+    if(gtk_widget_get_visible(dbgw.pclog))
         gtk_window_iconify(GTK_WINDOW(dbgw.pclog));
-    if(GTK_WIDGET_VISIBLE(dbgw.code) & all)
+    if(gtk_widget_get_visible(dbgw.code) & all)
         gtk_window_iconify(GTK_WINDOW(dbgw.code));
-    if(GTK_WIDGET_VISIBLE(dbgw.stack))
+    if(gtk_widget_get_visible(dbgw.stack))
         gtk_window_iconify(GTK_WINDOW(dbgw.stack));
-	if(GTK_WIDGET_VISIBLE(dbgw.heap))
+	if(gtk_widget_get_visible(dbgw.heap))
         gtk_window_iconify(GTK_WINDOW(dbgw.heap));
-	if(GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(gtk_widget_get_visible(dbgw.iop))
         gtk_window_iconify(GTK_WINDOW(dbgw.iop));
 }
 
@@ -103,21 +103,21 @@
 	if(options3.dbg_dock)
 		return;
 
-    if(GTK_WIDGET_VISIBLE(dbgw.regs))
+    if(gtk_widget_get_visible(dbgw.regs))
         gtk_window_deiconify(GTK_WINDOW(dbgw.regs));
-    if(GTK_WIDGET_VISIBLE(dbgw.bkpts))
+    if(gtk_widget_get_visible(dbgw.bkpts))
         gtk_window_deiconify(GTK_WINDOW(dbgw.bkpts));
-    if(GTK_WIDGET_VISIBLE(dbgw.mem))
+    if(gtk_widget_get_visible(dbgw.mem))
         gtk_window_deiconify(GTK_WINDOW(dbgw.mem));
-    if(GTK_WIDGET_VISIBLE(dbgw.pclog))
+    if(gtk_widget_get_visible(dbgw.pclog))
         gtk_window_deiconify(GTK_WINDOW(dbgw.pclog));
-    if(GTK_WIDGET_VISIBLE(dbgw.code) & all)
+    if(gtk_widget_get_visible(dbgw.code) & all)
         gtk_window_deiconify(GTK_WINDOW(dbgw.code));
-    if(GTK_WIDGET_VISIBLE(dbgw.stack))
+    if(gtk_widget_get_visible(dbgw.stack))
         gtk_window_deiconify(GTK_WINDOW(dbgw.stack));
-	if(GTK_WIDGET_VISIBLE(dbgw.heap))
+	if(gtk_widget_get_visible(dbgw.heap))
         gtk_window_deiconify(GTK_WINDOW(dbgw.heap));
-	if(GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(gtk_widget_get_visible(dbgw.iop))
         gtk_window_deiconify(GTK_WINDOW(dbgw.iop));
 }
 
@@ -127,21 +127,21 @@
     if(options3.dbg_dock)
 		return;
 
-    if(!GTK_WIDGET_VISIBLE(dbgw.regs))
+    if(!gtk_widget_get_visible(dbgw.regs))
         gtk_widget_show(dbgw.regs);
-    if(!GTK_WIDGET_VISIBLE(dbgw.bkpts))
+    if(!gtk_widget_get_visible(dbgw.bkpts))
         gtk_widget_show(dbgw.bkpts);
-    if(!GTK_WIDGET_VISIBLE(dbgw.mem))
+    if(!gtk_widget_get_visible(dbgw.mem))
         gtk_widget_show(dbgw.mem);
-    if(!GTK_WIDGET_VISIBLE(dbgw.pclog))
+    if(!gtk_widget_get_visible(dbgw.pclog))
         gtk_widget_show(dbgw.pclog);
-    if(!GTK_WIDGET_VISIBLE(dbgw.code) && all)
+    if(!gtk_widget_get_visible(dbgw.code) && all)
         gtk_widget_show(dbgw.code);
-    if(!GTK_WIDGET_VISIBLE(dbgw.stack))
+    if(!gtk_widget_get_visible(dbgw.stack))
         gtk_widget_show(dbgw.stack);
-	if(!GTK_WIDGET_VISIBLE(dbgw.heap))
+	if(!gtk_widget_get_visible(dbgw.heap))
         gtk_widget_show(dbgw.heap);
-	if(!GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(!gtk_widget_get_visible(dbgw.iop))
         gtk_widget_show(dbgw.iop);
 }
 
@@ -151,21 +151,21 @@
     if(options3.dbg_dock)
 		return;
 
-    if(GTK_WIDGET_VISIBLE(dbgw.regs))
+    if(gtk_widget_get_visible(dbgw.regs))
         gtk_widget_hide(dbgw.regs);
-    if(GTK_WIDGET_VISIBLE(dbgw.bkpts))
+    if(gtk_widget_get_visible(dbgw.bkpts))
         gtk_widget_hide(dbgw.bkpts);
-    if(GTK_WIDGET_VISIBLE(dbgw.mem))
+    if(gtk_widget_get_visible(dbgw.mem))
         gtk_widget_hide(dbgw.mem);
-    if(GTK_WIDGET_VISIBLE(dbgw.pclog))
+    if(gtk_widget_get_visible(dbgw.pclog))
         gtk_widget_hide(dbgw.pclog);
-    if(GTK_WIDGET_VISIBLE(dbgw.code) && all)
+    if(gtk_widget_get_visible(dbgw.code) && all)
         gtk_widget_hide(dbgw.code);
-    if(GTK_WIDGET_VISIBLE(dbgw.stack))
+    if(gtk_widget_get_visible(dbgw.stack))
         gtk_widget_hide(dbgw.stack);
-	if(GTK_WIDGET_VISIBLE(dbgw.heap))
+	if(gtk_widget_get_visible(dbgw.heap))
         gtk_widget_hide(dbgw.heap);
-	if(GTK_WIDGET_VISIBLE(dbgw.iop))
+	if(gtk_widget_get_visible(dbgw.iop))
         gtk_widget_hide(dbgw.iop);
 }
 
@@ -343,7 +343,7 @@
 	if(!options3.dbg_dock)
 	{
 		g_signal_handlers_block_by_func(GTK_OBJECT(item), on_registers1_activate, NULL);
-		gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.regs));
+		gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.regs));
 		g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_registers1_activate, NULL);
 	}
 	else
@@ -355,7 +355,7 @@
 	if(!options3.dbg_dock)
 	{
 		g_signal_handlers_block_by_func(GTK_OBJECT(item), on_breakpoints1_activate, NULL);
-		gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.bkpts));
+		gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.bkpts));
 		g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_breakpoints1_activate, NULL);
 	}
 	else
@@ -367,7 +367,7 @@
 	if(!options3.dbg_dock)
 	{
 		g_signal_handlers_block_by_func(GTK_OBJECT(item), on_memory1_activate, NULL);
-		gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.mem));
+		gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.mem));
 		g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_memory1_activate, NULL);
 	}
 	else
@@ -377,7 +377,7 @@
     elt = g_list_nth(list, 3);
     item = GTK_CHECK_MENU_ITEM(elt->data);
     g_signal_handlers_block_by_func(GTK_OBJECT(item), on_pc_log1_activate, NULL);
-    gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.pclog));
+    gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.pclog));
     g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_pc_log1_activate, NULL);
 
     // stack
@@ -386,7 +386,7 @@
 	if(!options3.dbg_dock)
 	{
 		g_signal_handlers_block_by_func(GTK_OBJECT(item), on_stack_frame1_activate, NULL);
-		gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.stack));
+		gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.stack));
 		g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_stack_frame1_activate, NULL);
 	}
 	else
@@ -398,7 +398,7 @@
 	if(!options3.dbg_dock)
 	{
 		g_signal_handlers_block_by_func(GTK_OBJECT(item), on_heap_frame1_activate, NULL);
-		gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.heap));
+		gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.heap));
 		g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_heap_frame1_activate, NULL);
 	}
 	else
@@ -408,7 +408,7 @@
 	elt = g_list_nth(list, 6);
     item = GTK_CHECK_MENU_ITEM(elt->data);
     g_signal_handlers_block_by_func(GTK_OBJECT(item), on_ioports_frame1_activate, NULL);
-    gtk_check_menu_item_set_active(item, GTK_WIDGET_VISIBLE(dbgw.iop));
+    gtk_check_menu_item_set_active(item, gtk_widget_get_visible(dbgw.iop));
     g_signal_handlers_unblock_by_func(GTK_OBJECT(item), on_ioports_frame1_activate, NULL);
 
 	// dock/multi mode
